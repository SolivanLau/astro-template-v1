---
export const prerender = false;
// CMS Scripts
import cmsFetch from "@assets/scripts/cms/cmsFetch";
import { getCurrentSeason, parseDate } from "@assets/scripts/lib/time";
// Layouts & Components
import PageLayout from "@layouts/PageLayout.astro";
import Header from "@layouts/Header.astro";
import Title from "@components/Title.astro";
import Newsletter from "@components/Newsletter.astro";
// ASSETS
import bgHeader from "@images/events-bg.png";
interface EventDetails {
    date: string;
}
interface Event {
    attributes: {
        details: EventDetails;
        title: string;
        slug: string;
    };
}
// QUERY PARAMS
const queryParameters = {
    fields: ["title", "slug"],
    populate: {
        poster: "*",
        details: {
            populate: "*",
        },
    },
};
// CMS PAGE QUERY
const pageQuery = await cmsFetch("events", queryParameters);

// GET CURRENT SEASON
const currentDate = new Date();
const { seasonStartYear, seasonEndYear, seasonStart, seasonEnd } = getCurrentSeason(currentDate);

// SORTED EVENTS -> DOM
let upcomingEvents = [];
let pastEvents = [];

pageQuery.forEach((event) => {
    const eventDate = new Date(event.attributes.details.date);

    if (eventDate >= seasonStart) {
        upcomingEvents.push(event);
    }

    if (eventDate < currentDate) {
        pastEvents.push(event);
    }
});

// SORTED EVENTS
upcomingEvents.sort(
    (a: Event, b: Event) =>
        parseDate(a.attributes.details.date).getTime() -
        parseDate(b.attributes.details.date).getTime(),
);
pastEvents.sort(
    (a: Event, b: Event) =>
        parseDate(b.attributes.details.date).getTime() -
        parseDate(a.attributes.details.date).getTime(),
);
---

<PageLayout isTurnstile>
    <Header title="Concert & Events" backgroundImgPath={bgHeader} />
    <main>
        <!-- CURRENT EVENTS -->
        <section class="wrapper section__padding">
            <Title
                tagName="h2"
                topper={seasonStartYear + "/" + seasonEndYear.toString().slice(2) + " Season"}
                >Upcoming Concerts & Events</Title
            >
        </section>

        <!-- ALL EVENTS -->
        <section class="wrapper section__padding">
            <Title tagName="h2" topper="Our Projects">Past Concerts</Title>
            {
                // ALL Events
                pastEvents && pastEvents.length > 0 && (
                    <ul>
                        {pastEvents.map((event) => {
                            const { title, slug, poster, details } = event.attributes;
                            return (
                                <li>
                                    <a href={`/events/${slug}`}>{title}</a>
                                </li>
                            );
                        })}
                    </ul>
                )
            }
        </section>

        <!-- NEWSLETTER -->
        <Newsletter />
    </main>
</PageLayout>

<style lang="scss"></style>
