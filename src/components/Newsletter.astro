---
import { Picture } from "astro:assets";
import { Icon } from "astro-icon/components";
import bgImage from "@images/newsletter-bg-desktop.webp";
import Input from "@components/forms/Input.astro";
import Button from "@components/forms/Button.astro";

interface Props {
    class?: string;
    extraPadding?: "top" | "bottom" | "both" | null;
    [key: string]: any;
}

const { class: className, extraPadding, ...rest } = Astro.props;

const extraPaddingClass = extraPadding
    ? `section__padding--extra${extraPadding !== "both" ? `-${extraPadding}` : null}`
    : null;
---

<section class:list={["background__image-parent", "section__padding", className]} {...rest}>
    <div class:list={["wrapper", "newsletter", extraPaddingClass]}>
        <!-- Heading -->
        <div class="newsletter__text">
            <h2 class="title-font--display">Stay Informed</h2>
            <p class="h6">Get updates on concerts, events, and more!</p>
        </div>
        <!-- Form -->
        <form class="form newsletter__form">
            <div class="newsletter__form__title">
                <h3 class="h5 body-font">Join Our Mailing List</h3>
                <Icon name="mail" />
            </div>
            <div class="form__inputs newsletter__form__inputs">
                <Input inputType="email" name="Email" id="email" />
                <Input inputType="text" name="First Name" id="first-name" />
                <Input inputType="text" name="Last Name" id="last-name" />
                <div
                    class="cf-turnstile"
                    data-sitekey={import.meta.env.VITE_TURNSTILE_SITE_KEY}
                    data-size="flexible"
                    data-theme="light"
                >
                </div>
            </div>

            <div class="form__response newsletter__form__response">
                <Button type="button--primary" htmlType="submit" isLoader>Sign Up</Button>
                <div class="status">
                    <div class="status__icon">
                        <Icon name="success" />
                        <Icon name="error" />
                    </div>
                    <p class="status__message">test</p>
                </div>
            </div>
        </form>
    </div>
    <!-- Background Image -->
    <Picture
        class="background__image"
        src={bgImage}
        alt="Toronto Wind Collective Rehearsal Shot"
        width={1920}
        formats={["webp", "jpg"]}
    />
</section>

<style lang="scss">
    @use "@styles/partials/abstracts/mixins" as *;

    // Background Image
    .background__image-parent {
        background: linear-gradient(-85.41deg, rgba(66, 58, 112, 17%) 0%, #695c7c 58%);
    }
    .background__image {
        translate: 38%;
    }
    // Layout
    .newsletter {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: var(--spc-lg) var(--spc-med);
        // Text
        &__text {
            color: var(--clr-white);
            display: grid;
            gap: var(--spc-sm);
            text-wrap: balance;
        }

        // Form
        &__form {
            min-width: 350px;
            width: 40%;
            gap: 32px;

            &__title {
                display: flex;
                align-items: center;
                gap: 12px;
                [data-icon="mail"] {
                    font-size: 30px;
                }
            }
            // inputs & response layout
            &__inputs,
            &__response {
                display: grid;
                gap: 12px;
            }
        }
    }

    // MEDIA QUERIES

    // TABLET

    @include responsive-style(950) {
        // Layout Shift

        .background__image-parent {
            background: linear-gradient(-20deg, rgba(66, 58, 112, 17%) 0%, #695c7c 85%);
        }

        .background__image {
            translate: 0;
            object-position: 40% 70%;
        }

        .newsletter {
            flex-direction: column;

            &__text {
                text-align: center;
            }
            &__form {
                min-width: 0;
                width: 100%;
                max-width: 550px;

                &__title {
                    justify-content: center;
                }
            }
        }
    }

    @include responsive-style(tablet) {
        h3 {
            font-size: var(--font-sz-500);
        }
    }
    @include responsive-style(mobile) {
        .newsletter {
            gap: var(--spc-med);
            &__form {
                gap: var(--spc-med);
            }
        }

        h3 {
            font-size: var(--font-sz-400);
        }
    }
</style>

<script>
    declare const turnstile: any;

    const newsletterForms = document.querySelectorAll(".newsletter__form");

    // Newsletter Submission
    newsletterForms.forEach((form) => {
        // DOM Elements
        const newsletterForm = form as HTMLFormElement;
        const submitButton = newsletterForm.querySelector(
            'button[type="submit"]',
        ) as HTMLButtonElement;
        const turnstileWidget = newsletterForm.querySelector(".cf-turnstile");
        const status = newsletterForm.querySelector(".status");
        const statusMessage = newsletterForm.querySelector(".status__message");

        statusMessage.classList.remove("respond");

        newsletterForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            const url: string = "/api/newsletter";
            submitButton.disabled = true;

            // Reset status and message each submission
            status.classList.remove("respond", "error");
            statusMessage.textContent = "";

            const formData = new FormData(newsletterForm);

            // API REQUEST
            try {
                const request = await fetch(url, {
                    method: "POST",
                    body: formData,
                });
                // // network and CORS errors
                if (!request.ok) {
                    console.log("request", request);

                    throw new Error(request.statusText);
                }

                const response = await request.json();

                // API RESPONSE
                if (!response.success) {
                    console.error("Error subscribing to newsletter:", response);
                    statusMessage.textContent = ` ${response.message}`;
                    status.classList.add("error");
                    return;
                }

                statusMessage.textContent = `Welcome to the collective!\nWe'll keep you updated with new events.`;
                status.classList.remove("error");
                // Reset form on success
                newsletterForm.reset();
            } catch (error) {
                console.log("ERROR", error);

                console.error(`Error subscribing to newsletter: ${error}`);
                statusMessage.textContent = `${error}`;
                status.classList.add("error");
            } finally {
                turnstile.reset(turnstileWidget);
                status.classList.add("respond");
                submitButton.disabled = false;
            }
        });
    });
</script>
