---
import { readdirSync } from "fs";
const faviconDir = "public";
const faviconRegex = /^favicon-([^-]+)-(\d+)x\2\.(png|ico|svg)$/;

const checkForCMSFavicons = async () => {
    try {
        console.log("Searching for local favicons");
        const files = readdirSync(faviconDir);

        const cmsFiles = files.filter((file) => faviconRegex.test(file));

        if (cmsFiles.length > 0) {
            const files = cmsFiles.map((name) => {
                const match = name.match(faviconRegex);

                console.log(`Rendering ${name} favicon`);

                return {
                    type: match[1],
                    size: match[2],
                    extension: match[3],
                    name,
                };
            });

            return files;
        }
    } catch (error) {
        console.error("Error checking favicon files:", error);
    }
};
let favicons = await checkForCMSFavicons();
---

{
    favicons.length === 0 && favicons === null ? (
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    ) : (
        favicons.map((favicon) => {
            const { type, size, extension } = favicon;
            // apple
            if (favicon.type === "apple") {
                return (
                    <link
                        rel="icon"
                        rel="apple-touch-icon"
                        sizes={`${size}x${size}`}
                        href={`/favicon-${type}-${size}x${size}.${extension}`}
                    />
                );
            }
            // standard
            if (type === "standard") {
                switch (size) {
                    case "32":
                        return (
                            <link
                                rel="icon"
                                type="image/png"
                                sizes={`${size}x${size}`}
                                href={`/favicon-${type}-${size}x${size}${extension}`}
                            />
                        );
                    case "16":
                        return (
                            <link
                                rel="icon"
                                type="image/png"
                                sizes={`${size}x${size}`}
                                href={`/favicon-${type}-${size}x${size}${extension}`}
                            />
                        );
                }
            }
            return null;
        })
    )
}
