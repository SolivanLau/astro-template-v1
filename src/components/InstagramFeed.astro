---
import Title from "@components/Title.astro";
import Link from "@components/Link.astro";
import { Icon } from "astro-icon/components";
---

<section class="instagram section__padding">
    <div class="wrapper">
        <Title tagName="h2" topper="Join Our Community">Follow Us On Instagram</Title>
        <Link class="cta" url="https://www.instagram.com/torontowindcollective/" isLinkExternal>
            <Icon name="socials/instagram" />
            <p>instagram/torontowindcollective</p>
        </Link>
    </div>
    <div class="wrapper">
        <ul class="instagram_gallery"></ul>
    </div>
</section>

<style lang="scss">
    @use "@styles/partials/" as *;

    .cta {
        display: flex;
        align-items: center;
        gap: var(--spc-xs);
        padding: var(--spc-med) 0;

        [data-icon] {
            font-size: 40px;
        }
    }
    .instagram_gallery {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: 1fr 1fr;
        gap: 32px;
        // DOM GENERATED CONTENT
        :global(.instagram_card) {
            -webkit-box-shadow: 5px 4px 3.3px 0px rgba(0, 0, 0, 0.25);
            -moz-box-shadow: 5px 4px 3.3px 0px rgba(0, 0, 0, 0.25);
            box-shadow: 5px 4px 3.3px 0px rgba(0, 0, 0, 0.25);
            aspect-ratio: 1 / 1;
            overflow: hidden;
            background-color: antiquewhite;
        }

        :global(.instagram_img) {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }

        // video icon
        :global(.instagram_card--video) {
            position: relative;
        }
        :global(.instagram_card--video-icon) {
            position: absolute;
            top: 12px;
            right: 12px;
            fill: #ffffff;
            :global(svg) {
                fill: #ffffff;
                color: #ffffff;
            }
        }
    }

    @include responsive-style(tablet) {
        .instagram_gallery {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }

    @include responsive-style(mobile) {
        .instagram_gallery {
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
        }
    }
</style>

<script>
    interface InstagramPost {
        media_type: "IMAGE" | "VIDEO";
        caption: string;
        permalink: string;
        media_url?: string;
        thumbnail_url?: string;
    }
    const instagramGallery = document.querySelector(".instagram_gallery") as HTMLElement;

    const populateGallery = (data: InstagramPost[]) => {
        data.forEach((post) => {
            const { media_type, caption, permalink, media_url, thumbnail_url } = post;
            let container = document.createElement("li") as HTMLLIElement;
            let link = document.createElement("a") as HTMLAnchorElement;
            let img = document.createElement("img") as HTMLImageElement;

            Object.assign(img, {
                alt: caption,
                className: "instagram_img",
                width: 296,
                height: 296,
                loading: "lazy",
                decoding: "async",
            });

            Object.assign(link, {
                href: permalink,
                target: "_blank",
                rel: "noopener noreferrer",
            });

            // image and video card specifics
            if (media_type === "IMAGE") {
                container.className = "instagram_card instagram_card--img";
                img.src = media_url;
            } else {
                container.className = "instagram_card instagram_card--video";
                img.src = thumbnail_url;
                let videoIcon = document.createElement("div") as HTMLDivElement;
                videoIcon.className = "instagram_card--video-icon";
                videoIcon.innerHTML = `<svg aria-label="Reels" fill="currentColor" height="24" role="img" viewBox="0 0 24 24" width="24"><title>Reels</title><line fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="2" x1="2.049" x2="21.95" y1="7.002" y2="7.002"></line><line fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="13.504" x2="16.362" y1="2.001" y2="7.002"></line><line fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7.207" x2="10.002" y1="2.11" y2="7.002"></line><path d="M2 12.001v3.449c0 2.849.698 4.006 1.606 4.945.94.908 2.098 1.607 4.946 1.607h6.896c2.848 0 4.006-.699 4.946-1.607.908-.939 1.606-2.096 1.606-4.945V8.552c0-2.848-.698-4.006-1.606-4.945C19.454 2.699 18.296 2 15.448 2H8.552c-2.848 0-4.006.699-4.946 1.607C2.698 4.546 2 5.704 2 8.552Z" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path><path d="M9.763 17.664a.908.908 0 0 1-.454-.787V11.63a.909.909 0 0 1 1.364-.788l4.545 2.624a.909.909 0 0 1 0 1.575l-4.545 2.624a.91.91 0 0 1-.91 0Z" fill-rule="evenodd"></path></svg>`;
                container.appendChild(videoIcon);
            }
            container.appendChild(link);
            link.appendChild(img);
            instagramGallery.appendChild(container);
        });
    };

    const fetchInstagramGallery = async () => {
        try {
            const feedResponse = await fetch("/api/instagram/feed");
            if (!feedResponse.ok) {
                throw new Error(
                    `HTTPS Error. Response: ${feedResponse.status}. Details: ${feedResponse.statusText}`,
                );
            }

            const response = await feedResponse.json();
            const posts = response.data;
            if (posts.length > 3) {
                instagramGallery.innerHTML = "";
                populateGallery(posts);
            }
        } catch (error) {
            console.error(error);
        }
    };

    document.addEventListener("DOMContentLoaded", fetchInstagramGallery);
</script>
