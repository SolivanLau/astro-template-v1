---
import Input from "./forms/Input.astro";
import { Icon } from "astro-icon/components";

interface Props {
    class?: string;
    [key: string]: any;
}
const { class: className, ...rest } = Astro.props;
---

<form {...rest} class:list={["form", "contact-form", className]} data-netlify="true">
    <Input inputType="text" name="Name" id="first-name" />
    <Input inputType="text" name="Phone" id="phone" />
    <Input inputType="email" name="Email" id="email" />
    <Input textarea name="Message" id="message" rows="7" />

    <div class="response">
        <button class="button button--primary" type="submit">Send Message</button>
        <div class="status">
            <div class="status__icon">
                <Icon name="success" />
                <Icon name="error" />
            </div>
            <p class="status__message"></p>
        </div>
    </div>
</form>

<style lang="scss">
    @use "@styles/partials/abstracts/mixins" as *;

    .form {
        display: grid;
        gap: var(--spc-med);
        box-shadow: (0px 6px 8.8px 6px rgba(0, 0, 0, 0.25));
    }
    // MEDIA QUERIES

    .response {
        display: grid;
        gap: var(--spc-med);
    }
    @include responsive-style(tablet) {
        .form {
            --form-padding: var(--spc-lg) var(--spc-med);
        }
    }
</style>

<script>
    console.log("Contact Form Loaded");

    const contactForms = document.querySelectorAll(".contact-form");

    contactForms.forEach((contactForm) => {
        const form = contactForm as HTMLFormElement;
        console.log(form);
        const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        const status = form.querySelector(".status");
        const statusMessage = form.querySelector(".status__message");

        statusMessage.classList.remove("respond");

        contactForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            submitButton.disabled = true;
            const formData = new FormData(form);

            try {
                const send = await fetch("/", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: new URLSearchParams(formData),
                });

                if (!send.ok) {
                    throw new Error(send.statusText);
                } else {
                    statusMessage.textContent = `Message sent!\nWe'll get back to you soon.`;
                    status.classList.remove("error");
                    // Reset form on success
                    form.reset();
                }
            } catch (error) {
                console.error(`Error subscribing to newsletter: ${error}`);
                statusMessage.textContent = `${error}`;
                status.classList.add("error");
            } finally {
                status.classList.add("respond");
                submitButton.disabled = false;
            }
        });
    });
</script>
