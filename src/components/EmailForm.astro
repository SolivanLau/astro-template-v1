---
const apiUrl = import.meta.env.PROD
    ? `${import.meta.env.SITE}/api/newsletter`
    : `http://localhost:4321/api/newsletter`;
---

<form id="newsletter-form">
    <div>
        <label for="email">Email</label>
        <input type="text" id="email" required />
    </div>

    <div>
        <label for="first-name">First Name</label>
        <input type="text" name="first-name" id="first-name" />
    </div>

    <div>
        <label for="last-name">Last Name</label>
        <input type="text" name="last-name" id="last-name" />
    </div>

    <div class="status">
        <p class="status__message"></p>
    </div>
    <button type="submit">Subscribe</button>
</form>

<style lang="scss">
    .status {
        min-height: 1.5em;
        padding: 15px 0;
        border: 1px red solid;
    }

    .status__message {
        margin: 0;
        opacity: 0;
        transition: 0.3s ease-in-out opacity;

        color: green;

        &.error {
            color: red;
        }

        &.response {
            opacity: 1;
        }
    }
</style>

<script define:vars={{ apiUrl }}>
    const newsletterForms = document.querySelectorAll("#newsletter-form");
    // Create Message
    console.log(apiUrl);
    // Newsletter Submission
    newsletterForms.forEach((form) => {
        form.addEventListener("submit", async (e) => {
            e.preventDefault();

            // DOM Elements
            const email = form.querySelector("#email");
            const firstName = form.querySelector("#first-name");
            const lastName = form.querySelector("#last-name");
            const statusMessage = form.querySelector(".status__message");

            statusMessage.classList.remove("response");

            try {
                const request = await fetch(apiUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        email: email.value.trim().toLowerCase(),
                        firstName: firstName.value.trim(),
                        lastName: lastName.value.trim(),
                    }),
                });

                // network and CORS errors
                if (!request.ok) {
                    console.log(request);
                    switch (request.status) {
                        case 404:
                            throw new Error(
                                `404, We could not find what you were looking for!  ${request.statusText}`,
                            );
                        case 500:
                            throw new Error(`500, internal server error: ${request.statusText}`);

                        default:
                            throw new Error(`HTTP Error: ${request.status}: ${request.statusText}`);
                    }
                }

                const response = await request.json();
                // API RESPONSE
                if (response.success) {
                    console.log("Yaya", response);
                    statusMessage.classList.remove("error");
                    statusMessage.textContent = "Thank you - you are subscribed!";
                    statusMessage.classList.add("response");
                } else {
                    console.log("NAUR", response);
                    statusMessage.classList.add("error");
                    statusMessage.textContent = `${response.data.message}`;
                    statusMessage.classList.add("response");
                }
            } catch (error) {
                console.error(`Error subscribing to newsletter: ${error}`);
                statusMessage.classList.add("error");
                statusMessage.textContent = `we ran into an issue`;
            }
        });
    });
</script>
