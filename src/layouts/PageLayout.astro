---
// STYLES
import "@styles/styles.scss";
import type { Props as SeoProps } from "@components/head/Seo.astro";
// SCRIPTS
import cmsFetch from "src/assets/scripts/cms/cmsFetch";
// LAOUTS
import Navigation from "@components/nav/Navigation.astro";
import Footer from "@components/Footer.astro";
// COMPONENTS
import Favicon from "@components/head/Favicon.astro";
import Seo from "@components/head/Seo.astro";
import Preview from "@components/Preview.astro";
import Scrollimate from "@components/Scrollimate.astro";

interface Props {
    cmsSeo?: SeoProps["cmsSeo"];
    fallbackSeo: SeoProps["fallbackSeo"];
    isTurnstile?: boolean;
    class?: string;
}
const { cmsSeo, fallbackSeo, isTurnstile, class: className, ...rest } = Astro.props;

const queryParameters = {
    populate: {
        logo: "*",
        navigation: "*",
        mainNavigation: "*",
        footer: {
            populate: {
                bio: "*",
                ctaButton: "*",
                navigation: "*",
                socials: {
                    populate: "*",
                },
            },
        },
    },
};
const pageQuery = await cmsFetch("site-information", queryParameters);
const {
    logo = null,
    navigation = null,
    mainNavigation = null,
    footer = null,
} = pageQuery?.attributes ?? {};
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <Favicon />
        <Seo cmsSeo={cmsSeo} fallbackSeo={fallbackSeo} />
        {
            isTurnstile && (
                <script
                    is:inline
                    src="https://challenges.cloudflare.com/turnstile/v0/api.js"
                    async
                    defer
                />
            )
        }
    </head>
    <body class="page-layout overlay">
        {
            (import.meta.env.VITE_IS_PREVIEW_MODE === "true" ||
                import.meta.env.VITE_IS_PREVIEW_MODE === true) && <Preview />
        }
        <Navigation
            logo={logo?.data?.attributes}
            mainNavigation={mainNavigation}
            ctaButton={navigation.ctaButton}
        />
        <div class:list={["content", className]} {...rest}>
            <slot />
        </div>
        <Footer
            logo={logo?.data?.attributes}
            bio={footer?.bio}
            navigation={footer.navigation}
            socials={footer.socials.data}
        />
        <Scrollimate />
    </body>
</html>

<style lang="scss">
    @use "@styles/partials/abstracts/mixins" as *;

    .page-layout {
        min-height: 100vh;
        min-height: 100dvh;
        display: grid;
        grid-template-rows: auto 1fr auto;
    }

    // TABLET MEDIA QUERY
    @include responsive-style(tablet) {
        // Adjusting content to Fixed Navigation
        html {
            scroll-padding-top: 80px;
        }
        .content {
            margin-top: 80px;
        }
    }
</style>
